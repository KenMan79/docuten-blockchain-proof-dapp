{
  "contractName": "ProofOfLifeProxy",
  "abi": [],
  "bytecode": "0x6080604052348015600f57600080fd5b50603580601d6000396000f3fe6080604052600080fdfea165627a7a723058201afaeef849e9e5293d5c8c83606f319c2d352d499c2f7b381e1ba69ad3f237c90029",
  "deployedBytecode": "0x6080604052600080fdfea165627a7a723058201afaeef849e9e5293d5c8c83606f319c2d352d499c2f7b381e1ba69ad3f237c90029",
  "sourceMap": "111:548:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:548:6;;;;;;;",
  "deployedSourceMap": "111:548:6:-;;;;;",
  "source": "pragma solidity ^0.5.0;\n\nimport \"./HasAuditRegistry.sol\";\n\n\n/* @title Proof of Life Proxy with delegateCall */\ncontract ProofOfLifeProxy is HasAuditRegistry {\n \n    // State\n\n    /* @notice Lock contract\n    * @dev Maintenance and security circuit locker\n    */\n    //function lock() public {\n    /*   uint256256 val = 100;\n        delegatedContractAddress.delegatecall(abi.encodeWithSignature(\"foo(uint256256,uint256256)\")), val, val);\n      delegatedContractAddress.delegatecall(bytes4(keccak256(\"storeValue(uint256256)\")), val);\n      bytes memory delegateBytes = bytes4(keccak256(\"lock()\"));\n      contractAddress.delegatecall(delegateBytes);*/\n\n    //}\n}",
  "sourcePath": "/Users/xmunch/Desktop/Projects/Ethereum Projects/docuten-blockchain-proof/contracts/ProofOfLifeProxy.sol",
  "ast": {
    "absolutePath": "/Users/xmunch/Desktop/Projects/Ethereum Projects/docuten-blockchain-proof/contracts/ProofOfLifeProxy.sol",
    "exportedSymbols": {
      "ProofOfLifeProxy": [
        868
      ]
    },
    "id": 869,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 864,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/xmunch/Desktop/Projects/Ethereum Projects/docuten-blockchain-proof/contracts/HasAuditRegistry.sol",
        "file": "./HasAuditRegistry.sol",
        "id": 865,
        "nodeType": "ImportDirective",
        "scope": 869,
        "sourceUnit": 155,
        "src": "25:32:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 866,
              "name": "HasAuditRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 154,
              "src": "140:16:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasAuditRegistry_$154",
                "typeString": "contract HasAuditRegistry"
              }
            },
            "id": 867,
            "nodeType": "InheritanceSpecifier",
            "src": "140:16:6"
          }
        ],
        "contractDependencies": [
          154
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 868,
        "linearizedBaseContracts": [
          868,
          154
        ],
        "name": "ProofOfLifeProxy",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 869,
        "src": "111:548:6"
      }
    ],
    "src": "0:659:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/xmunch/Desktop/Projects/Ethereum Projects/docuten-blockchain-proof/contracts/ProofOfLifeProxy.sol",
    "exportedSymbols": {
      "ProofOfLifeProxy": [
        868
      ]
    },
    "id": 869,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 864,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:6"
      },
      {
        "absolutePath": "/Users/xmunch/Desktop/Projects/Ethereum Projects/docuten-blockchain-proof/contracts/HasAuditRegistry.sol",
        "file": "./HasAuditRegistry.sol",
        "id": 865,
        "nodeType": "ImportDirective",
        "scope": 869,
        "sourceUnit": 155,
        "src": "25:32:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 866,
              "name": "HasAuditRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 154,
              "src": "140:16:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_HasAuditRegistry_$154",
                "typeString": "contract HasAuditRegistry"
              }
            },
            "id": 867,
            "nodeType": "InheritanceSpecifier",
            "src": "140:16:6"
          }
        ],
        "contractDependencies": [
          154
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 868,
        "linearizedBaseContracts": [
          868,
          154
        ],
        "name": "ProofOfLifeProxy",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 869,
        "src": "111:548:6"
      }
    ],
    "src": "0:659:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2018-12-27T14:54:45.919Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}